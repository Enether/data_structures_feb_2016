1.Check Prime Worst Case - O(n)
2.Check Prime Best Case - O(1)
3.Fast Check Prime - O(Sqrt(n))
4.First N Primes - O(?*Sqrt(n))
5.First N Primes Memory - O(Sqrt(n) + n)
6.Primes in Range - O((end-start)*Sqrt(end))
7.Compare Execution Speed:
		1000,  10 000,   50 000,  100 000,  1 000 000
IsPrime:      0.012s,    0.5s,    9.74s,      36s,      hangs
IsPrimeFaster:0.001s,   0.01s,    0.09s,    0.22s,         5s

